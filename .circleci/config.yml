version: 2.1

orbs:
  python: circleci/python@1.3.2
  # Using windows for builds
  win: circleci/windows@2.4.0
  # Upload artifacts to s3
  aws-s3: circleci/aws-s3@2.0.0

jobs:
  get-ci-tools: # Clones our ci tools and persists them to the workspace
    docker:
      - image: cimg/base:2021.01
    steps:
      - add_ssh_keys:
          fingerprints:
            - "77:64:03:93:c5:f3:1d:a6:fd:bd:fb:d1:05:56:ca:e9"
      - run:
          name: I know Github as a host
          command: |
            mkdir ~/.ssh
            touch ~/.ssh/known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Clone
          command: git clone git@github.com:specklesystems/speckle-sharp-ci-tools.git speckle-sharp-ci-tools
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools

  get-ui: # Clones our ci tools and persists them to the workspace
    docker:
      - image: cimg/base:2021.01
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - add_ssh_keys:
          fingerprints:
            - "d1:d5:96:4d:ed:58:6e:7f:58:cc:21:5f:94:20:76:49"
      - run:
          name: I know Github as a host
          command: |
            touch ~/.ssh/known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Clone
          command:  |
            git clone git@github.com:specklesystems/specklepy_qt_ui.git speckle_toolbox/esri/toolboxes/speckle/specklepy_qt_ui
      - run:
          name: Remove Git Artifacts
          command: |
            rm -rf ./speckle_toolbox/esri/toolboxes/speckle/specklepy_qt_ui/.git/
            rm ./speckle_toolbox/esri/toolboxes/speckle/specklepy_qt_ui/.gitignore
      - persist_to_workspace:
          root: ./
          paths:
            - speckle_toolbox/esri/toolboxes/speckle/specklepy_qt_ui

  build-connector-win: # Reusable job for basic connectors
    executor:
      name: win/default # comes with python 3.7.3
    parameters:
      slug:
        type: string
        default: "arcgis"
      installer:
        type: boolean
        default: false
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Patch
          shell: powershell.exe
          command:
            | # If no tag, use 0.0.0.1 and don't make any YML (for testing only!)
            $tag = if([string]::IsNullOrEmpty($env:CIRCLE_TAG)) { "0.0.0" } else { $env:CIRCLE_TAG }
            $semver = if($tag.Contains('/')) {$tag.Split("/")[1] } else { $tag }
            $ver = if($semver.Contains('-')) {$semver.Split("-")[0] } else { $semver }
            $version = "$($ver).$($env:CIRCLE_BUILD_NUM)"
            echo $semver
            python patch_version.py $semver
            pip install setuptools
            python setup.py sdist bdist_wheel
            Copy-Item -Path "dist\speckle_toolbox-$($ver)-py3-none-any.whl" -Destination "speckle_arcgis_installer"

      - run:
          name: Exit if External PR
          shell: bash.exe
          command: if [ "$CIRCLE_PR_REPONAME" ]; then circleci-agent step halt; fi
      
      - unless: # Build installers unsigned on non-tagged builds
          condition: << pipeline.git.tag >>
          steps:
            - run:
                name: Build Installer
                shell: cmd.exe #does not work in powershell
                command: 
                  speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\arcgis.iss /Sbyparam=$p

      - when: # Setup certificates and build installers signed for tagged builds
          condition: << pipeline.git.tag >>
          steps:
            - run: # Installs digicert signing tools for windows
                name: "Digicert Signing Manager Setup"
                command: |
                  cd C:\
                  curl.exe -X GET  https://one.digicert.com/signingmanager/api-ui/v1/releases/smtools-windows-x64.msi/download -H "x-api-key:$env:SM_API_KEY" -o smtools-windows-x64.msi
                  msiexec.exe /i smtools-windows-x64.msi /quiet /qn | Wait-Process
            - run: # Creates the Auth cert and the signing public PEM cert
                name: Create Auth & OV Signing Cert
                command: |
                  cd C:\
                  echo $env:SM_CLIENT_CERT_FILE_B64 > certificate.txt
                  certutil -decode certificate.txt certificate.p12
            - run: # Syncs certificates from Digicert into local user store
                name: Sync Certs
                command: |
                  & $env:SSM\smksp_cert_sync.exe
            - run: 
                name: Build Installer
                shell: cmd.exe
                command:
                  | # If no tag, use 0.0.0.1 and don't make any YML (for testing only!)
                  speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\arcgis.iss \
                  /Sbyparam=$p \
                  /DSIGN_INSTALLER \
                  /DCODE_SIGNING_CERT_FINGERPRINT=%SM_CODE_SIGNING_CERT_SHA1_HASH%
      - when:
          condition: << parameters.installer >>
          steps:
            - persist_to_workspace:
                root: ./
                paths:
                  - speckle-sharp-ci-tools/Installers
                  - speckle_arcgis_installer
    environment:
      SSM: 'C:\Program Files\DigiCert\DigiCert One Signing Manager Tools'

  publish-github-release:
    docker:
      - image: cimg/go:1.20.0
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: "Publish Release on GitHub"
          command: |
            set -x
            go install github.com/tcnksm/ghr@v0.16.0
            VERSION="${CIRCLE_TAG:-0.0.0}"
            VERSION_SHORT=$(echo "${VERSION}" | cut -d- -f1)
            ghr -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete "${VERSION}" "./speckle_arcgis_installer/speckle_toolbox-${VERSION_SHORT}-py3-none-any.whl"

  deploy-manager2:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    parameters:
      slug:
        type: string
      os:
        type: string
      extension:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Install Manager Feed CLI
          command: dotnet tool install --global Speckle.Manager.Feed
      - run:
          name: Upload new version
          command: |
            TAG=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "0.0.0"; fi;)
            SEMVER=$(echo "$TAG" | sed -e 's/\/[a-zA-Z-]*//')
            /root/.dotnet/tools/Speckle.Manager.Feed deploy -s << parameters.slug >> -v ${SEMVER} -u https://releases.speckle.dev/installers/<< parameters.slug >>/<< parameters.slug >>-${SEMVER}.<< parameters.extension >> -o << parameters.os >> -f speckle-sharp-ci-tools/Installers/<< parameters.slug >>/<< parameters.slug >>-${SEMVER}.<< parameters.extension >>

workflows: #happens with every PR to main
  build: # build the installers, but don't persist to workspace for deployment
    jobs:
      - get-ui:
          context: github-dev-bot
      - get-ci-tools:
          context: github-dev-bot
      - build-connector-win:
          requires:
            - get-ui
            - get-ci-tools
          context: digicert-keylocker

  deploy: # build installers and deploy
    jobs:
      - get-ui:
          context: github-dev-bot
          filters: &deploy_filters
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/
            branches:
              ignore: /.*/

      - get-ci-tools:
          context: github-dev-bot
          filters: *deploy_filters

      - build-connector-win:
          name: build-deploy-connector-win
          slug: arcgis
          installer: true
          requires:
            - get-ui
            - get-ci-tools
          filters: *deploy_filters
          context: digicert-keylocker
      - publish-github-release:
          requires:
            - build-deploy-connector-win
          filters: *deploy_filters
          context: arcgis-github-release
      - deploy-manager2:
          slug: arcgis
          os: Win
          extension: exe
          requires:
            - build-deploy-connector-win
          filters: *deploy_filters
          context: do-spaces-speckle-releases